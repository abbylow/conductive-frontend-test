{"version":3,"sources":["components/Sankey/Link.jsx","components/Sankey/Node.jsx","components/Sankey/Sankey.jsx","const.js","App.jsx","index.jsx"],"names":["horizontalSource","d","source","x1","y0","horizontalTarget","target","x0","y1","Link","link","color","setHoveredLinkValue","linkWidth","width","path","linkHorizontal","sankeyLinkHorizontal","style","fill","stroke","strokeWidth","isNaN","onMouseEnter","value","onMouseLeave","name","Node","node","height","setHoveredNodeValue","defaultHeight","nodeWidth","nodeHeight","nodeX","nodeY","textX","textY","pointerEvents","x","y","userSelect","overflowX","Sankey","data","nodePadding","children","useWindowSize","windowWidth","windowHeight","sankeyWidth","sankeyHeight","useState","nodes","links","graph","setGraph","useEffect","d3sankey","extent","ZERO","nodeMap","App","setLinks","hoveredLinkValue","hoveredNodeValue","a","fetch","response","text","csvString","csvData","Papa","parse","shift","linkMap","mintTotal","forEach","rowIndex","from","to","quantity","undefined","currValue","parseFloat","replace","linkKey","currentVal","nodeBalance","parseLinks","Object","keys","filter","l","map","sourceNode","targetNode","Number","nodeKey","push","quiddPrice","setQuiddPrice","Promise","resolve","reject","axios","get","headers","process","console","log","json","QUIDD","quote","USD","price","toFixed","length","className","i","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.c9512e80.chunk.js","sourcesContent":["// Libraries\nimport React, { useState } from \"react\";\nimport { linkHorizontal } from \"d3-shape\";\n\nfunction horizontalSourceO(d) {\n  const y = (d.source.y1 - d.source.y0) / 2 + d.source.y0;\n  return [d.source.x1, y];\n}\n\nfunction horizontalTargetO(d) {\n  const y = (d.target.y1 - d.target.y0) / 2 + d.target.y0;\n  return [d.target.x0, y];\n}\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nfunction sankeyLinkHorizontal() {\n  return linkHorizontal().source(horizontalSource).target(horizontalTarget);\n}\n\nfunction sankeyLinkHorizontalO() {\n  return linkHorizontal().source(horizontalSourceO).target(horizontalTargetO);\n}\n\n// Component\nexport default function Link({ link, color, setHoveredLinkValue }) {\n  const linkWidth = link.width;\n\n  const path = sankeyLinkHorizontal()(link);\n\n  return (\n    <path\n      d={path}\n      style={{\n        fill: \"none\",\n        stroke: color,\n        strokeWidth: linkWidth && !isNaN(linkWidth) ? linkWidth : 0\n      }}\n      onMouseEnter={() => setHoveredLinkValue(link.value)}\n      onMouseLeave={() => setHoveredLinkValue('')}\n    >\n      <title>\n        {link.source.name} -&gt; {link.target.name}: {link.value}\n      </title>\n    </path>\n  );\n}\n","// Libraries\nimport React from \"react\";\n\n// Component\nexport default function Node({\n  node: { x0, x1, y0, y1, value },\n  color,\n  name,\n  width,\n  height,\n  setHoveredNodeValue\n}) {\n  const defaultWidth = x1 - x0;\n  const defaultHeight = y1 - y0;\n\n  const nodeWidth = width ? width : defaultWidth;\n  const nodeHeight = height ? height : defaultHeight;\n\n  const nodeX = width ? x0 : x0;\n  const nodeY = height ? y0 + defaultHeight / 2 - height / 2 : y0;\n\n  const textX = width ? x0 : x0;\n  const textY = height ? nodeY + height / 2 + 6 : y0 + nodeHeight / 2 + 6;\n\n  return (\n    <g\n      style={{ pointerEvents: \"all\" }}\n      onMouseEnter={() => setHoveredNodeValue(value)}\n      onMouseLeave={() => setHoveredNodeValue('')}\n    >\n      <rect\n        x={nodeX}\n        y={nodeY}\n        width={nodeWidth}\n        height={nodeHeight}\n        fill={color}\n      >\n        <title>{name}</title>\n      </rect>\n      <text\n        x={textX + 5}\n        y={textY}\n        width={nodeWidth}\n        fill=\"black\"\n        style={{ userSelect: \"none\", overflowX: \"hidden\" }}\n      >\n        {name}\n      </text>\n    </g>\n  );\n}\n","// Libraries\nimport React, { useEffect, useState } from \"react\";\nimport { sankey as d3sankey } from \"d3-sankey\";\nimport { useWindowSize } from \"react-use\";\n\n// Component\nexport default function Sankey({\n  data,\n  // width,\n  // height,\n  nodeWidth,\n  nodePadding,\n  children\n}) {\n  // Handling Size\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n\n  const sankeyWidth = windowWidth - 100;\n  const sankeyHeight = windowHeight - 100;\n\n  // State & Data\n  const [graph, setGraph] = useState({\n    nodes: [],\n    links: []\n  });\n\n  useEffect(() => {\n    setGraph(\n      d3sankey()\n        .nodeWidth(nodeWidth)\n        .nodePadding(nodePadding)\n        .extent([\n          [0, 0],\n          [sankeyWidth, sankeyHeight - 50]\n        ])(data)\n    );\n  }, [nodePadding, nodeWidth, sankeyWidth, sankeyHeight, data]);\n\n  if (children)\n    return (\n      <svg width={sankeyWidth} height={sankeyHeight}>\n        {children({ graph })}\n      </svg>\n    );\n\n  return <g />;\n}\n","export const CSV_PATH = './quidd-bsc-transfers-0x7961Ade0a767c0E5B67Dd1a1F78ba44F727642Ed.csv';\n\nexport const ZERO = '0x0000000000000000000000000000000000000000';\nconst OWNER = '0x72571d815dd31fbde52be0b9d7ffc8344aede616';\nconst POLKASTARTER = '0xee62650fa45ac0deb1b24ec19f983a8f85b727ab';\nconst PANCAKE_SWAP = '0xd6d206f59cc5a3bfa4cc10bc8ba140ac37ad1c89';\n\nexport const nodes = [\n  { name: 'Mint', color: 'purple' },\n  { name: 'Polkastarter', color: 'blue' },\n  { name: 'PancakeSwap', color: 'red' },\n  { name: 'Jump 1', color: 'yellow' },\n  { name: 'HODL', color: 'green' },\n];\n\nexport const nodeMap = {\n  [OWNER]: 0,\n  [POLKASTARTER]: 1,\n  [PANCAKE_SWAP]: 2\n  // all the other wallet addresses that not fall into the cases above will be Jump 1\n};","// Libraries\nimport React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\n\n// Custom Components\nimport { Sankey, Link, Node } from \"./components/Sankey\";\nimport { CSV_PATH, ZERO, nodes, nodeMap } from \"./const\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const [links, setLinks] = useState([]);\n  const [hoveredLinkValue, setHoveredLinkValue] = useState('');\n  const [hoveredNodeValue, setHoveredNodeValue] = useState('');\n\n  useEffect(async () => {\n    // load the data from CSV\n    const response = await fetch(CSV_PATH);\n    const csvString = await response.text();\n    // parse the data from CSV to array\n    const csvData = Papa.parse(csvString)?.data;\n    // remove the first row data as there are headers\n    csvData.shift();\n\n    const linkMap = {};\n    let mintTotal = 0;\n\n    // process the data \n    csvData.forEach(([txhash, blockno, unixTimestamp, dateTime, from, to, quantity, method], rowIndex) => {\n      // if the address is not owner / POLKASTARTER / pancake swap, it is considered as other wallet\n      let source = nodeMap[from] === undefined ? 3 : nodeMap[from];\n      let target = nodeMap[to] === undefined ? 3 : nodeMap[to];\n\n      // don't show the link where the source and target is the same (avoid circular link)\n      if (source === target) return;\n\n      let currValue = parseFloat(quantity.replace(/,/g, \"\"));\n\n      if (from === ZERO) {\n        mintTotal += currValue; // mint to owner wallet\n        return;\n      } else if (to === ZERO) {\n        mintTotal -= currValue; // burn\n        return;\n      }\n\n      let linkKey = `${source}${target}`;\n      if (source < target) {\n        const currentVal = linkMap[linkKey] || 0;\n        linkMap[linkKey] = currentVal + currValue;\n      } else {\n        linkKey = `${target}${source}`;\n        const currentVal = linkMap[linkKey] || 0;\n        linkMap[linkKey] = currentVal - currValue;\n      }\n    });\n\n    const nodeBalance = {}; // the balance is used for calculating the links to HODL node\n    nodeBalance[0] = mintTotal; // mint node should have an initial value equal to mintTotal at the beginning\n\n    // create links using linkMap\n    const parseLinks = Object.keys(linkMap).filter(l => linkMap[l] !== 0).map(l => {\n      let sourceNode = l[0];\n      let targetNode = l[1];\n      let value = linkMap[l];\n\n      // swap the source and target if the value is negative\n      if (value < 0) {\n        sourceNode = l[1];\n        targetNode = l[0];\n        value = -linkMap[l];\n      }\n\n      // update the balance\n      nodeBalance[sourceNode] = nodeBalance[sourceNode] ? nodeBalance[sourceNode] - value : -value;\n      nodeBalance[targetNode] = nodeBalance[targetNode] ? nodeBalance[targetNode] + value : +value;\n\n      return {\n        source: Number(sourceNode),\n        target: Number(targetNode),\n        value\n      }\n    });\n\n    // add links for HODL\n    Object.keys(nodeBalance).filter(nodeKey => nodeBalance[nodeKey] > 0).map(nodeKey => {\n      const sourceNode = nodeKey;\n      const targetNode = 4; // HODL node\n      const value = nodeBalance[nodeKey];\n\n      const link = {\n        source: Number(sourceNode),\n        target: Number(targetNode),\n        value\n      };\n\n      // maybe the token goes into DEX / POLKASTARTER not considered as HODL\n      if (sourceNode == 0 || sourceNode == 3) {\n        parseLinks.push(link);\n      }\n    });\n\n    setLinks(parseLinks);\n  }, []);\n\n  const [quiddPrice, setQuiddPrice] = useState('--');\n\n  // API Reference: https://coinmarketcap.com/api/documentation/v1/#operation/getV1CryptocurrencyQuotesLatest\n  useEffect(() => {\n    let response = null;\n    new Promise(async (resolve, reject) => {\n      try {\n        response = await axios.get('https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=QUIDD&convert=USD', {\n          headers: {\n            'X-CMC_PRO_API_KEY': process.env.REACT_APP_CMC_API_KEY,\n          },\n        });\n      } catch (ex) {\n        response = null;\n        // error\n        console.log(ex);\n        reject(ex);\n      }\n      if (response) {\n        // success\n        const json = response.data;\n        const quiddPrice = json?.data?.QUIDD?.quote?.USD?.price?.toFixed(8) || '--';\n        setQuiddPrice(quiddPrice);\n        resolve(json);\n      }\n    });\n  }, []);\n\n  // Hide the diagram before the links are in calculation\n  if (links.length === 0 || nodes.length === 0) {\n    return <div>loading</div>\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"mb-8 text-center\">\n        <h3>Summary</h3>\n        <p>\n          Total Value QUIDD - This displays the total lifetime sum of transfer value in QUIDD tokens\n          <br />\n          Total number of transactions - This displays the total number of transactions being displayed.\n        </p>\n        <p>{hoveredLinkValue && `QUIDD tokens transferred: ${hoveredLinkValue}`}</p>\n        <p>{hoveredNodeValue && `QUIDD tokens in USD: ${+hoveredNodeValue * quiddPrice}`}</p>\n      </div>\n\n      <Sankey\n        data={{\n          nodes,\n          links\n        }}\n        nodeWidth={100}\n        nodePadding={40}\n      >\n        {({ graph }) => {\n          return (\n            <g>\n              {graph &&\n                graph.links.map((link, i) => (\n                  <Link\n                    key={`sankey-link-${i}`}\n                    link={link}\n                    color={\"rgba(0, 0, 0, 0.2)\"}\n                    setHoveredLinkValue={setHoveredLinkValue}\n                  />\n                ))}\n              {graph &&\n                graph.nodes.map((node, i) => (\n                  <Node\n                    key={`sankey-node-${i}`}\n                    node={node}\n                    color={node.color}\n                    name={node.name}\n                    setHoveredNodeValue={setHoveredNodeValue}\n                  />\n                ))}\n            </g>\n          );\n        }}\n      </Sankey>\n\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\nimport 'dotenv/config'\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}